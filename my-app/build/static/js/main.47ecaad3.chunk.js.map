{"version":3,"sources":["img/digibits-logo.svg","components/Header/index.js","components/Main/index.js","components/FilterSearch/index.js","components/FilterBtnGroup/index.js","components/FilterBar/index.js","components/CardWrapper/index.js","components/TeamCard/index.js","App.js","index.js"],"names":["module","exports","Header","className","Container","Navbar","Brand","src","Logo","alt","Nav","Link","href","target","Main","props","children","FilterSearch","inputValue","handleInputChange","Form","onSubmit","e","preventDefault","Control","type","placeholder","value","onChange","FilterBtnGroup","sortBtn","resetBtn","handleSelectDropdown","ButtonGroup","Button","onClick","DropdownButton","as","title","id","onSelect","Dropdown","Item","eventKey","FilterBar","Row","Col","md","CardWrapper","TeamCard","name","location","phone","email","img","height","rel","App","useState","teamArray","team","setTeam","search","setSearch","warning","setWarning","nameSort","setNameSort","useEffect","test","results","filter","person","includes","toLowerCase","resetTeam","event","sort","a","b","length","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47ecaad3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/digibits-logo.d64045a5.svg\";","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\nimport Logo from '../../img/digibits-logo.svg';\nimport { FaGithub } from 'react-icons/fa';\nimport './style.css';\n\n// This is static top section of the page and gives it semantic value.\nfunction Header() {\n    return (\n        <header className=\"bg--image\">\n            <Container>\n                <Navbar className=\"justify-content-between\">\n                    <Navbar.Brand>\n                        <img src={Logo} alt=\"DigiBit Logo\" />\n                    </Navbar.Brand>\n                    <Nav>\n                        <Nav.Link href=\"https://github.com/GedalyaKrycer/unit-19-react-homework-employee-directory\" target=\"_Blank\"><FaGithub className=\"github-icon\" /></Nav.Link>\n                    </Nav>\n\n                </Navbar>\n                <h1 className=\"text-center text-color\">Team Directory</h1>\n            </Container>\n        </header>\n    )\n}\n\n\nexport default Header;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\n// This wrapper gives the main section semantic value and the background color.\nfunction Main(props) {\n    return (\n        <main className=\"bg-color\">\n            <Container>\n                {props.children}\n            </Container>\n        </main>\n    )\n}\n\n\nexport default Main;","import React from 'react';\nimport './style.css';\nimport { FaSearch } from 'react-icons/fa';\nimport Form from 'react-bootstrap/Form'\n\n// This allows the user to search via the team names and features an auto-completed list\nfunction FilterSearch({ inputValue, handleInputChange }) {\n    return (\n        <Form className=\"has-search margin\" onSubmit={e => { e.preventDefault(); }}>\n            <FaSearch className=\"form-control-feedback search-icon\" />\n            <Form.Control\n                type=\"search\"\n                placeholder=\"Search by nameâ€¦\"\n                className=\"search-input\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </Form>\n    )\n}\n\nexport default FilterSearch;","import React from 'react';\nimport './style.css';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Button from 'react-bootstrap/Button'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\n\n// This button group allows the user to filter names from A-Z, Z-A, filter by Job Title, filter by Location Title, and reset all values.\nfunction FilterBtnGroup({ sortBtn, resetBtn, children, handleSelectDropdown }) {\n    return (\n        <ButtonGroup className=\"margin full-width\">\n            <Button onClick={sortBtn}>{children}</Button>\n\n            <DropdownButton as={ButtonGroup} title=\"Title\" id=\"bg-nested-dropdown\" onSelect={handleSelectDropdown}>\n                <Dropdown.Item eventKey=\"Manager\">Manager</Dropdown.Item>\n                <Dropdown.Item eventKey=\"Designer\">Designer</Dropdown.Item>\n                <Dropdown.Item eventKey=\"Developer\">Developer</Dropdown.Item>\n            </DropdownButton>\n\n            <DropdownButton as={ButtonGroup} title=\"Location\" id=\"bg-nested-dropdown\" onSelect={handleSelectDropdown}>\n                <Dropdown.Item eventKey=\"New York\">New York</Dropdown.Item>\n                <Dropdown.Item eventKey=\"Las Vegas\">Las Vegas</Dropdown.Item>\n                <Dropdown.Item eventKey=\"Chicago\">Chicago</Dropdown.Item>\n            </DropdownButton>\n            <Button onClick={resetBtn}>Reset</Button>\n        </ButtonGroup>\n\n\n    )\n}\n\n\nexport default FilterBtnGroup;","import React from 'react';\nimport './style.css';\nimport FilterSearch from '../FilterSearch/';\nimport FilterBtnGroup from '../FilterBtnGroup/';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\n// This combines the filter search input and the filter button group of dropdowns and buttons. \nfunction FilterBar({ inputValue, handleInputChange, resetBtn, sortBtn, children, handleSelectDropdown }) {\n    return (\n        <Row>\n            <Col md={4}>\n                <FilterSearch\n                    inputValue={inputValue}\n                    handleInputChange={handleInputChange} />\n            </Col>\n            <Col md={8} className=\"button-group\">\n                <FilterBtnGroup resetBtn={resetBtn} sortBtn={sortBtn} children={children} handleSelectDropdown={handleSelectDropdown} />\n            </Col>\n        </Row>\n\n    )\n}\n\n\nexport default FilterBar;","import React from 'react';\nimport './style.css';\n\n\n// This allows the team directory cards to wrap in a grid (max 4) and stack on smaller screens.\nfunction CardWrapper({ children }) {\n    return (\n        <div className=\"wrapper\">{children}</div>\n    )\n}\n\n\nexport default CardWrapper;","import React from 'react';\nimport './style.css';\nimport { FaMapMarkerAlt, FaPhoneAlt, FaEnvelope } from 'react-icons/fa';\nimport LazyLoad from 'react-lazyload';\n\n\n\nfunction TeamCard({ name, title, location, phone, email, img }) {\n\n    return (\n\n        <div className=\"card-container\">\n            <div className=\"card-intro text-color\">\n                <LazyLoad height=\"41\">\n                    <img src={img} alt={name} />\n                </LazyLoad >\n\n                <h2>{name}</h2>\n                <h3>{title}</h3>\n            </div>\n            <hr />\n            <div className=\"card-contact\">\n                <ul>\n                    <li><FaMapMarkerAlt /> <a rel=\"noopener noreferrer\" target=\"_blank\" href={`https://www.google.com/maps/place/${location}`}>{location} Office</a></li>\n                    <li><FaPhoneAlt /> <a href={`tel:${phone}`}>{phone}</a></li>\n                    <li><FaEnvelope /> <a href={`mailto:${email}`}>Send Email</a></li>\n                </ul>\n            </div>\n        </div>\n\n    )\n}\n\n\nexport default TeamCard;","import React, { useState, useEffect } from 'react';\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport FilterBar from \"./components/FilterBar\";\nimport CardWrapper from \"./components/CardWrapper\";\nimport TeamCard from \"./components/TeamCard\";\nimport teamArray from \"./team.json\";\n\n\n\nfunction App() {\n  // Handles which cards get wrapped to\n  const [team, setTeam] = useState(teamArray);\n\n  // Handles the search state\n  const [search, setSearch] = useState('');\n\n  // Handles the warning validations for search\n  const [warning, setWarning] = useState(false);\n\n  // Handles the name sorting state\n  const [nameSort, setNameSort] = useState(\"AZ\");\n\n\n  // Sets the Search State based on the search input\n  const handleInputChange = event => {\n    setSearch(event.target.value);\n  };\n\n  // Runs the first time the app starts or a new search term is provided\n  useEffect(() => {\n\n    // When the search field (state) is empty the orginal team array is loaded\n    if (!search) {\n      return setTeam(teamArray);\n    }\n\n    // Validates that the input is not a valid letter. If so it sets the warning boolean to true, resets the team array and clears the search field, before returning \n    if (!/^[a-zA-Z]*$/g.test(search)) {\n      setSearch(\"\");\n      setTeam(teamArray);\n      setWarning(true);\n      return;\n\n    }\n\n    // Powers the search to only show the people that match the search value state\n    const results = team.filter(person =>\n      person.name.includes(search.toLowerCase())\n    );\n    setTeam(results);\n    setWarning(false);\n\n\n  }, [search])\n\n\n\n  const sortNames = () => {\n    switch (nameSort) {\n      case 'AZ':\n        setTeam([...team].sort((a, b) => (a.name > b.name) ? 1 : -1));\n        setNameSort(\"ZA\")\n        break;\n      case 'ZA':\n        setTeam([...team].sort((a, b) => (a.name < b.name) ? 1 : -1))\n        setNameSort(\"AZ\")\n        break;\n      default:\n        return;\n    }\n  }\n\n\n  // Filters based on dropdown selected \n  const handleSelectDropdown = (eventKey) => {\n\n    switch (eventKey) {\n      case \"Manager\":\n        setTeam([...teamArray].filter(person =>\n          person.title.includes(\"Manager\")\n        ));\n        break;\n      case \"Designer\":\n        setTeam([...teamArray].filter(person =>\n          person.title.includes(\"Designer\")\n        ));\n        break;\n      case \"Developer\":\n        setTeam([...teamArray].filter(person =>\n          person.title.includes(\"Developer\")\n        ));\n        break;\n      case \"New York\":\n        setTeam([...teamArray].filter(person =>\n          person.location.includes(\"New York\")\n        ));\n        break;\n      case \"Las Vegas\":\n        setTeam([...teamArray].filter(person =>\n          person.location.includes(\"Las Vegas\")\n        ));\n        break;\n      case \"Chicago\":\n        setTeam([...teamArray].filter(person =>\n          person.location.includes(\"Chicago\")\n        ));\n        break;\n      default:\n        resetTeam();\n        return;\n\n    }\n  }\n\n\n  // Resets to all the team cards\n  const resetTeam = () => {\n    setTeam(teamArray);\n    setSearch(\"\");\n  }\n\n\n\n  return (\n    <>\n      <Header />\n      <Main>\n        <FilterBar\n          inputValue={search}\n          handleInputChange={handleInputChange}\n          resetBtn={resetTeam}\n          sortBtn={sortNames}\n          children={nameSort === \"AZ\" ? \"Sort Aâ€“Z\" : \"Sort Zâ€“A\"}\n          handleSelectDropdown={handleSelectDropdown} />\n\n        {/* Validation */}\n        {warning === false ? null : <h4>Woops, please use letters only. Numbers or special characters won't display results.</h4>}\n        {team.length === 0 ? <h4>Looks like we don't have this team member. Please try a different name or hit \"Reset\".</h4> : null}\n        \n          <CardWrapper>\n            {team.map(person => (\n              <TeamCard\n                key={person.id}\n                img={person.img}\n                name={person.name}\n                title={person.title}\n                location={person.location}\n                phone={person.phone}\n                email={person.email}\n              />\n            ))}\n          </CardWrapper>\n        \n      </Main>\n    </>\n  );\n}\n\nexport default App;\n\n\n\n\nconst sort = arr => arr.sort((a, b) => a - b);\n//By default,the sort() function sorts values as strings.Fix this by providing a compare function.\n// Example\nsort([1, 5, 2, 4, 3]);      // [1, 2, 3, 4, 5]","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './global.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}